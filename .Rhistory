num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num == "best"){
num <- 1
}
if (num > nrow(outcome_by_state[outcome_by_state$State == state, ])){
stop("NA")
}
}
## 30-day death rate
return(state_data[order(as.numeric(state_data[, index]), state_data[, 2]), 2][num])
}
rankhospital("MD", "heart attack", "worst")
# this is the start of a new file
rankall <- function(outcome, num = "best") {
## set working directory
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
## Check that state and outcome are valid
if (outcome %in% c("heart attack","heart failure","pneumonia") == FALSE){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
else{
if(outcome == "heart attack"){
index <- 11
}
else if(outcome == "heart failure"){
index <- 17
}
else {
index <- 23
}
if (num == "best"){
num <- 1
}
outcome_all <- data.frame()
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- NA
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num]
outcome_all <- rbind (outcome_all, s)
}
## Return a data frame with the hospital names and the
## 30-day death rate
## (abbreviated) state name
}
}
# this is the start of a new file
rankall <- function(outcome, num = "best") {
## set working directory
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
## Check that state and outcome are valid
if (outcome %in% c("heart attack","heart failure","pneumonia") == FALSE){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
else{
if(outcome == "heart attack"){
index <- 11
}
else if(outcome == "heart failure"){
index <- 17
}
else {
index <- 23
}
if (num == "best"){
num <- 1
}
outcome_all <- data.frame()
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- NA
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num]
outcome_all <- rbind (outcome_all, s)
}
## Return a data frame with the hospital names and the
## 30-day death rate
return (outcome_all)
## (abbreviated) state name
}
}
head(rankall("heart attack", 20), 10)
# this is the start of a new file
rankall <- function(outcome, num = "best") {
## set working directory
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
## Check that state and outcome are valid
if (outcome %in% c("heart attack","heart failure","pneumonia") == FALSE){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
else{
if(outcome == "heart attack"){
index <- 11
}
else if(outcome == "heart failure"){
index <- 17
}
else {
index <- 23
}
if (num == "best"){
num <- 1
}
outcome_all <- data.frame()
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- NA
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
outcome_all <- rbind (outcome_all, s)
}
## Return a data frame with the hospital names and the
## 30-day death rate
return (outcome_all)
## (abbreviated) state name
}
}
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
num = "worst"
index = 23
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state$State)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- NA
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
outcome_all <- rbind (outcome_all, s)
}
outcome_all <- data.frame()
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state$State)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- NA
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
outcome_all <- rbind (outcome_all, s)
}
View(outcome_all)
c(NA, 3)
source("rankall.R")
outcome_all <- data.frame()
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state$State)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- c(NA, state)
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
outcome_all <- rbind (outcome_all, s)
}
str(outcome_all)
View(outcome_all)
View(outcome_all[order(outcome_all$State), ])
c(NA, "C")
rbind(c(NA, "C"), c("a", "v"))
test <- data.frame()
test <- rbind(test, c(NA, 'C'))
test
state <- "AL"
test <- rbind(test, c(NA, "c"))
test
source("rankall.R")
index
num
outcome_all <- data.frame()
outcome_all <- data.frame()
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state$State)){
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num > nrow(state_data)){
s <- c("NA", state)
}
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
print(s, num)
outcome_all <- rbind (outcome_all, s)
}
## set working directory
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
source("rankall.R")
(rankall("heart attack", 20)
rankall("heart attack", 20)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source()
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
index
state
state = "WI"
state_data <- outcome_by_state[outcome_by_state$State == state, ]
num = "worst"
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
num
View(state_data)
nrow(state_data)
sum(complete.cases(state_data[, index]))
state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][125]
state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][125,]
index
View(outcome_by_state[order(outcome_by_state[outcome_by_state$State == "WI", 23], c(2, 23)])
View(outcome_by_state[order(outcome_by_state[outcome_by_state$State == "WI", 23]), c(2, 23)])
View(outcome_by_state[order(as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23])), c(2, 23)])
View(outcome_by_state[order(as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23])), c(2, 23)])
test <- outcome_by_state[order(as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23])), 23]
View(test)
order(as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23]))
as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23])
order(as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23]))
as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23])[24]
as.numeric(outcome_by_state[outcome_by_state$State == "WI", 23])[123]
state
state_data <- outcome_by_state[outcome_by_state$State == state, ]
num
num = "worst"
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
num
nrow(state_data)
sum(is.na(state_data))
sum(is.na(state_data[,23]))
sum(is.na(as.numeric(state_data[,23])))
num > nrow(state_data)
test <- order(as.numeric(state_data[, index]), state_data[, 2])
test[1]
test[118]
length(test)
sum(complete.cases(test))
sum(is.na(test))
test[117]
test[118]
state_data$Hospital.Name[81]
colnames(state_data)[2]
num
state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
state <- "WV"
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
num
state
sum(complete.cases(as.numeric(state_data[, index])))
num <- sum(complete.cases(as.numeric(state_data[, index])))
num
!(num > nrow(state_data))
state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
source("rankall.R")
# this is the start of a new file
rankall <- function(outcome, num = "best") {
## set working directory
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
## Check that state and outcome are valid
if (outcome %in% c("heart attack","heart failure","pneumonia") == FALSE){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
else{
if(outcome == "heart attack"){
index <- 11
}
else if(outcome == "heart failure"){
index <- 17
}
else {
index <- 23
}
if (num == "best"){
num <- 1
}
outcome_all <- data.frame()
i <- 0
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state$State)){
i <- i + 1
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
else if (!(num > nrow(state_data))){
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
}
else{
s <- c(NA, state)
}
if (is.na(s[1])){ print (s)}
print (i)
outcome_all <- rbind (outcome_all, s)
}
## Return a data frame with the hospital names and the
## 30-day death rate
## (abbreviated) state name
return(outcome_all[order(outcome_all$State), ])
}
}
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
s[1]
is.na(s[1])
s
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
warnings()
length(unique(outcome_by_state$State))
outcome_by_state$State
unique(outcome_by_state$State)
state_data <- outcome_by_state[outcome_by_state$State == "vi", ]
state_data <- outcome_by_state[outcome_by_state$State == "VI", ]
View(state_data)
outcome_all <- data.frame()
i <- 0
num
num == "worst"
num = "worst"
## For each state, find the hospital of the given rank
for (state in unique(outcome_by_state$State)){
i <- i + 1
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
print("worst")
num <- sum(complete.cases(as.numeric(state_data[, index])))
print(num)
}
else if (!(num > nrow(state_data))){
s <-  state_data[order(as.numeric(state_data[, index]), state_data[, 2]), c(2,7)][num, ]
}
else{
s <- c(NA, state)
}
if (is.na(s[1])){ print (s)}
# print (i)
outcome_all <- rbind (outcome_all, s)
}
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
# This is the start of a new file
best <- function(state, outcome) {
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
## Check that state and outcome are valid
if (state %in% outcome_by_state$State == FALSE){
stop("invalid state")
}
else if (outcome %in% c("heart attack","heart failure","pneumonia") == FALSE){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
else{
if(outcome == "heart attack"){
index <- 11
}
else if(outcome == "heart failure"){
index <- 17
}
else {
index <- 23
}
state_data <- outcome_by_state[outcome_by_state$State == state, ]
hospital_lowest_death <- state_data[order(as.numeric(state_data[, index]), state_data$Hospital.Name), c(2,index) ]
hospital_lowest_death <- hospital_lowest_death$Hospital.Name[1]
}
return(hospital_lowest_death)
## rate
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
# This is the start of a new file
rankhospital <- function(state, outcome, num = "best") {
## set working directory
setwd("/Users/lingwei/Desktop/coursera/rprog_data_ProgAssignment3-data")
## Read outcome data
outcome_by_state <- read.csv("outcome-of-care-measures.csv", header = TRUE, stringsAsFactors = FALSE)
## Check that state and outcome are valid
if (state %in% outcome_by_state$State == FALSE){
stop("invalid state")
}
else if (outcome %in% c("heart attack","heart failure","pneumonia") == FALSE){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
else{
if(outcome == "heart attack"){
index <- 11
}
else if(outcome == "heart failure"){
index <- 17
}
else {
index <- 23
}
state_data <- outcome_by_state[outcome_by_state$State == state, ]
if (num == "worst"){
num <- sum(complete.cases(as.numeric(state_data[, index])))
}
if (num == "best"){
num <- 1
}
if (num > nrow(outcome_by_state[outcome_by_state$State == state, ])){
stop("NA")
}
}
## 30-day death rate
return(state_data[order(as.numeric(state_data[, index]), state_data[, 2]), 2][num])
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
rankall("heart attack", 4)
r <- rankall("heart attack", 4)
r
as.character(subset(r, state == "HI")$hospital)
subset(r, state == "HI")$hospital
r[r$State == "HI", ]
subset(r, state == "HI")$hospital
subset(r, state== "HI")
?subset
str(r)
subset(r, State == "HI")$hospital
subset(r, State == "HI")$Hospital
r <- rankall("pneumonia", "worst")
as.character(subset(r, State == "NJ")$Hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, State == "NV")$Hospital)
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
r <- rankall("heart failure", 10)
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
r <- rankall("heart failure", 10)
head(r, 10)
nrow(r)
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
r <- rankall("heart failure", 10)
head(r)
length(r)
source('~/Desktop/coursera/rprog_data_ProgAssignment3-data/rankall.R')
r <- rankall("heart failure", 10)
length(r)
r
r <- rankall("heart failure", 5)
r
nrow(r)
